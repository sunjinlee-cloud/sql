SELECT * FROM EMP_DETAILS_VIEW;

--뷰 : 제한적인 자료를 보기 위해 미리 만들어 놓은 가상 테이블
--자주 사용되는 컬럼만 지정해 놓으면 관리가 용이해진다.
--데이터가 물리적으로 저장된 형태는 아니고 원본 테이블을 기반으로 한 논리적 테이블

--뷰를 생성하려면, 계정에 생성 권한이 있어야 한다.
SELECT * FROM USER_SYS_PRIVS;

--단순 뷰 : 
CREATE OR REPLACE VIEW VIEW_EMP
AS (
    SELECT EMPLOYEE_ID AS EMP_ID,
        FIRST_NAME||' '||LAST_NAME AS NAME,
        JOB_ID,
        SALARY
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID = 60
);

SELECT * FROM VIEW_EMP;

--복합 뷰 : 2개 이상의 테이블이 조인을 통해 만들어진 뷰
CREATE OR REPLACE VIEW VIEW_EMP_JOB
AS (
    SELECT E.EMPLOYEE_ID,
        FIRST_NAME||' '||LAST_NAME AS NAME,
        D.DEPARTMENT_NAME,
        L.STREET_ADDRESS,
        J.JOB_TITLE
    FROM EMPLOYEES E
    LEFT JOIN DEPARTMENTS D
    ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
    LEFT JOIN LOCATIONS L
    ON D.LOCATION_ID = L.LOCATION_ID
    LEFT JOIN JOBS J
    ON J.JOB_ID = E.JOB_ID
);
--뷰가 있으면 원하는 데이터를 쉽게 조회할 수 있다.
SELECT * FROM VIEW_EMP_JOB;

SELECT JOB_TITLE, COUNT(*) AS CNT FROM VIEW_EMP_JOB GROUP BY JOB_TITLE;

--뷰의 수정은 OR REPLACE만 붙이면 된다.
CREATE OR REPLACE VIEW VIEW_EMP
AS (
    SELECT EMPLOYEE_ID AS EMP_ID,
        FIRST_NAME||' '||LAST_NAME AS NAME,
        JOB_ID,
        SALARY
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID = 50
);
--뷰 삭제
DROP VIEW VIEW_EMP;
--뷰의 제약사항 : 뷰를 이용한 DML연산은 가능하긴 하나 많은 제약사항이 따른다.
SELECT * FROM VIEW_EMP_JOB;
INSERT INTO VIEW_EMP(EMP_ID, NAME) VALUES(250, '홍');
INSERT INTO VIEW_EMP(JOB_ID, SALARY) VALUES('IT_PROG' ,5000);
INSERT INTO VIEW_EMP_JOB (EMPLOYEE_ID, JOB_TITLE) VALUES (200, 'TEST');
--복합 뷰에는 아예 DML연산이 안됨.

--뷰의 옵션 : 뷰 생성 문장의 마지막에 적어 준다.
--WITH CHECK : WHERE 절에 들어간 컬럼의 변경이나 추가를 금지
--WITH READ ONLY : 읽기 전용 뷰로 DML문 사용 불가

CREATE OR REPLACE VIEW VIEW_EMP
AS (
    SELECT EMPLOYEE_ID,
        FIRST_NAME,
        EMAIL,
        JOB_ID,
        DEPARTMENT_ID
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID IN (60,70,80)
) WITH CHECK OPTION;

SELECT *FROM VIEW_EMP;
UPDATE VIEW_EMP SET DEPARTMENT_ID = 100 WHERE EMPLOYEE_ID = 105;
--읽기전용 뷰
CREATE OR REPLACE VIEW VIEW_EMP
AS (
    SELECT EMPLOYEE_ID,
        FIRST_NAME,
        EMAIL,
        JOB_ID,
        DEPARTMENT_ID
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID IN (60,70,80)
) WITH READ ONLY;