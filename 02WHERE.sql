SELECT FIRST_NAME FROM EMPLOYEES WHERE DEPARTMENT_ID='60';
SELECT * FROM EMPLOYEES;
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG';
SELECT * FROM EMPLOYEES WHERE SALARY >= '15000';
SELECT * FROM EMPLOYEES WHERE SALARY <= '10000';
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID <> '50';
SELECT * FROM EMPLOYEES WHERE FIRST_NAME = 'Steven';
SELECT * FROM EMPLOYEES WHERE HIRE_DATE = '04/01/30';
SELECT * FROM EMPLOYEES WHERE HIRE_DATE < '04/01/03';

--BETWEEN A AND B
SELECT * FROM EMPLOYEES WHERE SALARY BETWEEN 10000 AND 15000;
SELECT * FROM EMPLOYEES WHERE HIRE_DATE BETWEEN '03/01/01' AND '03/12/31';

--IN 연산자
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IN(50,60,70);
SELECT * FROM EMPLOYEES WHERE JOB_ID IN ('IT_PROG', 'AD_VP');

--LIKE 연산자 : 특정 문자나 숫자가 포함된 단어를 모두 찾아준다. %(문자가 0개 이상)와 _(종류불문 한개의 문자를 나타낸다)를 사용할 수 있다
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '%05%';
SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE '_ar%';
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '___05%';

--NULL 값을 조회하려면 IS NULL 혹은 IS NOT NULL을 사용해야 한다.
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT IS NULL;
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT IS NOT NULL;

--AND, OR : AND가 OR보다 연산 순위가 높다. 쿼리 작성시 주의
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' OR SALARY >= 5000; --잡아이디가 IT_PROG인 사람또는 샐러리가 5000이상
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' AND SALARY >= 5000; -- 두 조건을 모두 만족하는 사람만
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' OR JOB_ID = 'FI_MGR' AND SALARY >= 5000;
SELECT * FROM EMPLOYEES WHERE (JOB_ID = 'IT_PROG' OR JOB_ID = 'FI_MGR') AND SALARY >= 5000;

--NOT : 부정의 의미
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID NOT IN (50,60,70);
SELECT * FROM EMPLOYEES WHERE JOB_ID NOT LIKE '%IT%';

---------------------------------------------------------------------------
--ORDER BY 구문 : 
SELECT * FROM EMPLOYEES ORDER BY SALARY;
SELECT * FROM EMPLOYEES ORDER BY SALARY DESC;
SELECT * FROM EMPLOYEES ORDER BY DEPARTMENT_ID, SALARY DESC; 
-- 첫번째 기준으로 일단 정렬을 한 후 같은 값들에 대해 두번째 기준으로 정렬
-- 즉 여러 기준으로 정렬이 가능하다.

SELECT FIRST_NAME, SALARY * 12 AS 연봉 FROM EMPLOYEES ORDER BY 연봉;
--앨리어스를 정렬에서 사용 가능하다.

--SELECT FIRST_NAME, SALARY * 12 AS 연봉 FROM EMPLOYEES WHERE 연봉 > 10000; (X)
--WHERE 절에서는 앨리어스 사용 불가.

SELECT FIRST_NAME, SALARY FROM EMPLOYEES WHERE DEPARTMENT_ID = 50 ORDER BY FIRST_NAME;